buildscript {
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.10.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'


jar {
    baseName = 'gs-accessing-data-mongodb'
    version =  '0.1.0'
}

repositories {
	mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
}

dependencies {
    
    ///////////////// COMPILE /////////////////////////////////////////////////////////////
    compile group: 'commons-collections', 		name: 'commons-collections', version: '3.2'
    compile group: 'com.sparkjava' ,      		name: 'spark-core'         , version: '1.1.1'
    compile group: 'org.springframework.data', 	name: 'spring-data-mongodb', version: '1.6.1.RELEASE'
    compile group: 'org.springframework.boot', 	name: 'spring-boot-starter-data-mongodb'
    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-web'
        
    ///////////////// TEST /////////////////////////////////////////////////////////////////
    testCompile group: "junit", 				name: "junit", 				 version: "4.+"
    
    //////////////// querydsl //////////////////////////////////////////////////////
    compile group: 'com.mysema.querydsl', name: 'querydsl-mongodb', version: '3.6.1'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.1' 
}


compileJava {
    doFirst {
        Map otherArgs = [
            includeAntRuntime: false,
            destdir: destinationDir,
            classpath: configurations.compile.asPath,
            sourcepath: '',
            target: targetCompatibility,
            source: sourceCompatibility
        ]
        options.compilerArgs = [
            '-processor', 'com.mysema.query.apt.jpa.JPAAnnotationProcessor',
            '-s', "${destinationDir.absolutePath}".toString()
        ]
        Map antOptions = otherArgs + options.optionMap()
        ant.javac(antOptions) {
            source.addToAntBuilder(ant, 'src', FileCollection.AntType.MatchingTask)
            options.compilerArgs.each {value ->
                compilerarg(value: value)
            }
        }
    }
}






test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
